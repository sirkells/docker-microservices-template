version: "3"

services:
  frontend:
    container_name: UI
    build:
      context: ./UI
    ports:
      - "3001:5000"
    networks:
      webapp-network:
        ipv4_address: 172.28.1.1
    volumes:
      - "./UI:/app"
  backend:
    container_name: API
    restart: always
    depends_on:
      - "DB"
    build:
      context: ./API
    ports:
      - "3000:5000"
    networks:
      webapp-network:
        ipv4_address: 172.28.1.2
    volumes:
      - "./API:/app"
  DB:
    restart: always
    container_name: DB
    image: mongo
    environment:
      MONGO_NON_ROOT_USERNAME: saas
      MONGO_NON_ROOT_PASSWORD: secret
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: projectfinder
    volumes:
      - docker-data:/data/db
      - ./init-db/:/docker-entrypoint-initdb.d
    ports:
      - "27018:27017"
    networks:
      webapp-network:
        ipv4_address: 172.28.1.3
networks:
  webapp-network:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16

volumes:
  docker-data:
